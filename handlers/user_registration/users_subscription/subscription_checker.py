from aiogram import Router, F

from aiogram.types import CallbackQuery, Message

from services import get_user_subscriptions


from keyboards import user_subscription_checker_kb, user_subsc_last_kb_do_not_have_subs

from .subscription_checker_next_step import router as next_step_router

from sqlalchemy.ext.asyncio import AsyncSession

router = Router()

router.include_router(next_step_router)


@router.callback_query(F.data == "my_subcription")
async def my_subsc(callback: CallbackQuery, session: AsyncSession):

    user_subscriptions_result = await get_user_subscriptions(
        callback.from_user.id, session
    )
    if user_subscriptions_result:
        subsc = [f"{1+i}.{sub}" for i, sub in enumerate(user_subscriptions_result)]
        text = (
            "üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –£ –í–∞—Å –∞–∫—Ç–∏–≤–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞:\n"
            + "\n".join(subsc)
            + "\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ–µ –¥–µ—Ç–∞–ª–∏"
        )

        await callback.message.edit_text(
            text,
            reply_markup=await user_subscription_checker_kb(
                callback.from_user.id, session
            ),
        )

    else:
        await callback.message.edit_text(
            """
üòï–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ 
–¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. 
–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ 
–ø–æ–¥–ø–∏—Å–∫–∞–º–∏, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ 
"–ü–æ–¥–ø–∏—Å–∫–∏ –®–∫–æ–ª—ã". –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º 
–Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∫–∏, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å 
–Ω–∞—à–µ–π —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
""",
            reply_markup=user_subsc_last_kb_do_not_have_subs,
        )
